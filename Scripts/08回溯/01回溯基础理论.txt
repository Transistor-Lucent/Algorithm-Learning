## 介绍
1. 回溯是一种搜索方法
2. 回溯是递归的副产物，有递归必有回溯
3. 回溯本质是穷举（暴力查找）
3. 回溯并不高效（暴力查找），用于解决只能穷举的问题
	> #### 只能穷举解决的问题：
	> 组合问题：N个数里面按一定规则找出k个数的集合（无序）
	> 切割问题：一个字符串按一定规则有几种切割方式
	> 子集问题：一个N个数的集合里有多少符合条件的子集
	> 排列问题：N个数按一定规则全排列，有几种排列方式（有序）
	> 棋盘问题：N皇后，解数独等
4. 所有回溯问题都可抽象为树形结构（递归。N叉树）

## 写法（递归）
1. 返回值
2. 传参：先写逻辑，需要什么参数再加什么参数
3. 终止条件
4. 单层递归：for() {backtracking}  // for遍历该层，backtracking递归调用。for横向遍历，backtracking纵向遍历